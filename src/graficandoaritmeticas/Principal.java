package graficandoaritmeticas;

import analizadores.Lexico;
import analizadores.Sintactico;
import java.awt.Desktop;
import java.io.BufferedReader;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JViewport;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author david
 */
public class Principal extends javax.swing.JFrame{
    
    /**
     * Creates new form Principal
     */
    String url = System.getProperty("user.dir")+"\\";
    public Principal() {
        initComponents();
        setLocationRelativeTo(this);

       
    }


    java.io.File DER;

    private void abrirArchivo(JFileChooser selectorArchivo) {
        DER = selectorArchivo.getSelectedFile();
        String contenido = "";
        if (!"".equals(getTexto())) {
            try {
                Scanner scn = new Scanner(DER);
                while (scn.hasNext()) {
                    contenido += scn.nextLine() + "\n";
                }
                agregarPestana(DER.getName(), contenido);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            try {
                Scanner scn = new Scanner(DER);
                while (scn.hasNext()) {
                    contenido += scn.nextLine() + "\n";
                }
                setTexto(contenido);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    private void agregarPestana(String titulo, String contenido) {
        marco.addTab(titulo, new JScrollPane(new JTextArea(contenido)));
    }

    public void probar() {
        JTextArea c = (JTextArea) (((JViewport) (((JScrollPane) marco.getComponentAt(marco.getSelectedIndex())).getViewport()))).getView();
        System.out.println(c.getText());
    }

    private void crearArchivo() {
        try {
            JFileChooser nuevo = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos .rep", "rep");
            nuevo.setFileFilter(filtro);
            nuevo.showSaveDialog(this);
            DER = nuevo.getSelectedFile();
            if (DER != null) {
                try (FileWriter save = new FileWriter(DER + ".rep")) {
                    save.write(getTexto());
                }
                JOptionPane.showMessageDialog(null, "Se a guardado el Archivo correctamente.", "Exito al Guardar", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error al guardar el archivo, no se a guardado con exito.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void sobreescribirArchivo() {
        BufferedWriter bw = null;
        try {
            bw = new BufferedWriter(new FileWriter(DER));
            bw.write(getTexto());
            JOptionPane.showMessageDialog(null, "Se a guardado el Archivo correctamente.", "Exito al Guardar", JOptionPane.INFORMATION_MESSAGE);
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (bw != null) {
                try {
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        marco = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        codigo = new javax.swing.JTextArea();
        scr = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        nuevoArchivo = new javax.swing.JMenuItem();
        abrirArchivo = new javax.swing.JMenuItem();
        guardarArchivo = new javax.swing.JMenuItem();
        informacion = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        botonAnalizar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        marco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                marcoMouseClicked(evt);
            }
        });

        codigo.setColumns(20);
        codigo.setRows(5);
        jScrollPane2.setViewportView(codigo);

        marco.addTab("tab1", jScrollPane2);

        scr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scrMouseClicked(evt);
            }
        });

        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 889, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        scr.setViewportView(jPanel4);

        marco.addTab("tab2", scr);

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("     Archivo     ");

        nuevoArchivo.setText("Nuevo Archivo");
        nuevoArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoArchivoActionPerformed(evt);
            }
        });
        jMenu1.add(nuevoArchivo);

        abrirArchivo.setText("Abrir Archivo");
        abrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArchivoActionPerformed(evt);
            }
        });
        jMenu1.add(abrirArchivo);

        guardarArchivo.setText("Guardar");
        guardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarArchivoActionPerformed(evt);
            }
        });
        jMenu1.add(guardarArchivo);

        informacion.setText("Acerca de");
        informacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informacionActionPerformed(evt);
            }
        });
        jMenu1.add(informacion);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jMenu1.add(salir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("     Acciones    ");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        botonAnalizar.setText("Analizar");
        botonAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnalizarActionPerformed(evt);
            }
        });
        jMenu2.add(botonAnalizar);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(marco, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(marco, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoArchivoActionPerformed
        // TODO add your handling code here:
        crearArchivo();
    }//GEN-LAST:event_nuevoArchivoActionPerformed

    private void abrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArchivoActionPerformed
        // TODO add your handling code here:
        JFileChooser selectorArchivo = new JFileChooser();
        selectorArchivo.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (selectorArchivo.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            abrirArchivo(selectorArchivo);
        }
    }//GEN-LAST:event_abrirArchivoActionPerformed

    private void guardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarArchivoActionPerformed
        // TODO add your handling code here:
        if (DER != null) {
            int n = JOptionPane.showConfirmDialog(null, "El archivo sera modificado permanentemente, desea continuar?", "Verificacion de Guardado", JOptionPane.YES_NO_OPTION);
            if (true) {
                sobreescribirArchivo();
            }
        } else {
            crearArchivo();
        }
    }//GEN-LAST:event_guardarArchivoActionPerformed

    private void informacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informacionActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_informacionActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        int n = JOptionPane.showConfirmDialog(null, "Desea Cerrar la Aplicacion?", "Salir", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            System.exit(0);
        }

    }//GEN-LAST:event_salirActionPerformed

    String path = System.getProperty("user.dir");

    private ArrayList<String> obtenerficheros(String tipo) {
        ArrayList<String> rutas = new ArrayList();
        File dir = new File(path + "\\src\\" + tipo);
        String[] ficheros = dir.list();
        if (ficheros == null) {
            System.out.println("No hay ficheros en el directorio especificado");
        } else {
            for (String fichero : ficheros) {
                System.out.println("/" + tipo + "/" + fichero);
                rutas.add("/" + tipo + "/" + fichero);
            }
        }
        return rutas;
    }


    private void botonAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnalizarActionPerformed
        jPanel4.removeAll();
        jPanel4.repaint();
      
        try {
               //Runtime.getRuntime().exec(" del hola.pdf ");
                File archivo = new File("C:\\Users\\Stephan\\Desktop\\GraficandoAritmeticas-master\\hola.pdf");

            boolean estatus = archivo.delete();;

            if (!estatus) {

                System.out.println("Error no se ha podido eliminar el  archivo");

           }else{

                System.out.println("Se ha eliminado el archivo exitosamente");

           }
                } catch (Exception e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                }
        Lexico lexico;
        Sintactico analizar = null;
        try {
            String input = getTexto();
            lexico = new Lexico(new BufferedReader(new StringReader(input)));
            analizar = new Sintactico(lexico);
            try {
                analizar.parse();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        
    }//GEN-LAST:event_botonAnalizarActionPerformed

    private void marcoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marcoMouseClicked

        verpdf("C:\\Users\\Stephan\\Desktop\\GraficandoAritmeticas-master\\hola.pdf");
         jPanel4.removeAll();
        jPanel4.repaint();
    }//GEN-LAST:event_marcoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                     jPanel4.removeAll();
                jPanel4.repaint();
             
                            try {
               //Runtime.getRuntime().exec(" del hola.pdf ");
                File archivo = new File("C:\\Users\\Stephan\\Desktop\\GraficandoAritmeticas-master\\hola.pdf");

            boolean estatus = archivo.delete();;

            if (!estatus) {

                System.out.println("Error no se ha podido eliminar el  archivo");

           }else{

                System.out.println("Se ha eliminado el archivo exitosamente");

           }

               Runtime.getRuntime().exec(" pdftk.exe *.pdf cat output hola.pdf");
               
                } catch (Exception e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        // TODO add your handling code here:
       
             File archivo = new File("C:\\Users\\Stephan\\Desktop\\GraficandoAritmeticas-master\\hola.pdf");

            boolean estatus = archivo.delete();;

            if (!estatus) {

                System.out.println("Error no se ha podido eliminar el  archivo");

           }else{

                System.out.println("Se ha eliminado el archivo exitosamente");

           }
    }//GEN-LAST:event_jPanel4MouseClicked

    private void scrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrMouseClicked
        
        verpdf("C:\\Users\\Stephan\\Desktop\\GraficandoAritmeticas-master\\hola.pdf");     
        jPanel4.contains(null);
// TODO add your handling code here:
    }//GEN-LAST:event_scrMouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void setTexto(String texto) {
        JTextArea c = (JTextArea) (((JViewport) (((JScrollPane) marco.getComponentAt(marco.getSelectedIndex())).getViewport()))).getView();
        c.setText(texto);
    }

    private String getTexto() {
        JTextArea c = (JTextArea) (((JViewport) (((JScrollPane) marco.getComponentAt(marco.getSelectedIndex())).getViewport()))).getView();
        return c.getText();
    }

    public static void Imprimir(String impresion) {
//        consola.setText(consola.getText() + "\n" + impresion);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirArchivo;
    private javax.swing.JMenuItem botonAnalizar;
    private javax.swing.JTextArea codigo;
    private javax.swing.JMenuItem guardarArchivo;
    private javax.swing.JMenuItem informacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane marco;
    private javax.swing.JMenuItem nuevoArchivo;
    private javax.swing.JMenuItem salir;
    private javax.swing.JScrollPane scr;
    // End of variables declaration//GEN-END:variables

     private static void interpretar(String path) {
        analizadores.Sintactico pars;
        try {
            pars=new analizadores.Sintactico(new analizadores.Lexico(new FileInputStream(path)));
            pars.parse();        
        } catch (Exception ex) {
            System.out.println("Error fatal en compilación de entrada.");
            System.out.println("Causa: "+ex.getCause());
            ex.printStackTrace();
        } 
     }
     
        void verpdf(String file){
        try{
           
            SwingController control=new SwingController(); 
           SwingViewBuilder factry=new SwingViewBuilder(control);
            jPanel4=factry.buildViewerPanel();
            ComponentKeyBinding.install(control, jPanel4);
            control.getDocumentViewController().setAnnotationCallback(
            new org.icepdf.ri.common.MyAnnotationCallback(control.getDocumentViewController()));
            control.openDocument(file);
            scr.setViewportView(jPanel4);
        }catch(Exception ex){
            
        }
    }
        

}

